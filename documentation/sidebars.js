/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 */
const fs = require('fs')

const autoGenerated = (root = 'docs', path = root) => fs.readdirSync(path).filter(x => x !== 'assets').reduce((acc, item) => {
  if (fs.lstatSync(`${path}/${item}`).isDirectory()) {
    const listOfFilesInDirectory = autoGenerated(root, `${path}/${item}`)
    return {
      ...acc,
      ...listOfFilesInDirectory || {}
    }
  }

  const actualPath = path.split(`${root}/`)[1] || 'others'
  const olderValues = actualPath !== 'others' ? (acc[path.split(`${root}/`)[1]] || []) : (acc.others || [])

  return {
    ...acc,
    [actualPath]: [
      ...olderValues,
      `${path.split(`${root}/`).slice(1)}/${item}`.replace(/\.[^.]*$/, ''),
    ]
  }
}, {})

module.exports = {
  docs: Object.entries(autoGenerated()).reduce((acc, [key, value]) => {
    if (key !== 'others') {
      return [
        ...acc,
        {
          type: 'category',
          label: key.replace(/^[^_]*_/, ''),
          items: value,
        },
      ]
    }
    return [
      ...acc,
      ...value.map(item=> ({type: 'doc', id: item.split('/').pop()}))
    ]
  }, [])
};
